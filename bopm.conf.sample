/*

BOPM sample configuration

*/

options {
	pidfile = "bopm.pid";

	/* Maximum amount of nodes in the negative cache */
	negcache = 3600;

	/* Amount of file descriptors to allocate to asynchronous DNS */
	dns_fdlimit = 64;
};


IRC {
	/* Ip to bind to (THIS MUST BE AN IP!) */
	#vhost = "0.0.0.0";

	nick = "MyBopm";

	realname = "Blitzed Open Proxy Monitor";
	username = "bopm";

	server = "myserver.blitzed.org";
	port = 6667;
	
	#nickserv = "privmsg nickserv :identify password";

	oper = "bopm operpass";
 

	mode = "+cs";
	#mode = "+Fcs"; /* Bahamut +F */     


	away = "I'm a bot, don't message me.";

	channel {
	   name = "#bopm";
	   #key = "somekey";
	   #invite = "privmsg chanserv :invite #bopm";
	};

	/*
	channel {
	   name = "#other channel";
	}; */
       
	/* 
	   connregex is a POSIX regular expression used to parse connection (+c) 
	   notices from the ircd. The complexity of the expression should be kept
	   to a minimum.
	   
	   Items in order MUST be:
	   nick user host IP

	   BOPM will not work with ircds which do not send an IP in the connection
	   notice
	*/

	/* Hybrid / Bahamut */
	connregex = "\\*\\*\\* Notice -- Client connecting: ([^ ]+) \\(([^@]+)@([^\\)]+)\\) \\[([0-9\\.]+)\\].*";

	/* Kline format

	   %n     Users nick
	   %u     Users username
	   %h     Users irc hostname
	   %i     Users IP address

	*/

	kline = "KLINE *@%h :Open Proxy found on your host. Please visit www.blitzed.org/proxy?ip=%i for more information.";

        /* Text to send on connection, these can be stacked and will be sent in this order */
        /* Unreal users will need PROTOCTL HCN to force hybrid connect notices */
        #perform = "PROTOCTL HCN";

};


/* OPM Block defines blacklists and information required to report
   new proxies to a dns blacklist.   */

OPM {
       /* Blacklist zones to check IPs against */
	blacklist = "opm.blitzed.org";
	#blacklist = "opm.myhost.org";

        /* Information required to report new proxies to a blacklist */
	#dnsbl_from = "mybopm@myserver.org";
	#dnsbl_to = "reports@somehost.org";
	#sendmail = "/usr/sbin/sendmail";
};


/* Scanner defines a virtual scanner. For each user being scanner, a scanner will use 
   a file descriptor (and subsequent connection) for each protocol. Once connecting it
   will negotiate the proxy to connect to target_ip:target_port (target_ip MUST be an IP).

   Once connected, any data passed through the proxy will be checked to see if target_string
   is contained within that data. If it is the proxy is considered open. If the connection
   is closed at any point before target_string is matched, or if at least max_read bytes are
   read from the connection, the negotiation is considered failed.  */

scanner {

	/* Unique name of this scanner */
	name="default";

	protocol = HTTP:80;
	protocol = HTTP:8080;
	protocol = HTTP:3128;

	protocol = SOCKS4:1080;
	protocol = SOCKS5:1080;

	protocol = ROUTER:23;
	protocol = WINGATE:23;

	protocol = HTTPPOST:80;

	/* IP this scanner will bind to */
	#vhost = "127.0.0.1";

	/* Maximum file descriptors this scanner can use */
	fd = 512;

	/* Maximum data read from a proxy before considering it closed */
	max_read = 4096;

	/* Amount of time (in seconds) before a test is considered timed out */
	timeout = 30;

        /* 

            Target IP to tell the proxy to connect to
         
           *** THIS MUST BE CHANGED ***

           You cannot instruct the proxy to connect to itself! The easiest
           thing to do would be to set this to the IP of your ircd and then
           keep the default target_strings.

           Remember to change this setting for every scanner you configure.

         */

        target_ip     = "127.0.0.1";

	/* Target port to tell the proxy to connect to */
	target_port   = 6667;

	/* 
	   String target IP:PORT will send back to verify 
	   Multiple target strings are allowed.
	*/

	/* Usually first line sent to client on connection to ircd */                                                            
	target_string = "Looking up your hostname...";

	/* Catch throttled proxies on hybrid */
	target_string = "ERROR :Trying to reconnect too fast.";

	/* Catch throttled proxies on bahamut */
	#target_string = "ERROR :Your host is trying to (re)connect too fast -- throttled.";
	
};

scanner {
        name = "extended";
        protocol = HTTP:8001;
        protocol = HTTP:8002;
        protocol = HTTPPOST:8080;
        protocol = HTTPPOST:3128;
        #vhost = "127.0.0.1";
        fd = 128;
        target_ip     = "127.0.0.1";   /* !!! CHANGE ME !!! */
        target_port   = 6667;
        target_string = "Looking up your hostname...";
};



/* User blocks define what scanners will be used to scan which hostmasks. When a user connects they will
   be scanned on every scanner that matches their host. */

user {
	mask = "*!*@*";
	scanner = "default";
};

user {
	mask = "*!*@*proxy*";
	mask = "*!*@*www*";
	scanner = "extended";
};


/* Exempt defines any masks exempt from all hosting. Note that bopm will not know the
   connection between IP and hostnames. For instance if only *!*@127.0.0.1 is listed
   as an exempt but the user's mask is nick!user@localhost, it will not match the exemption */

exempt {
	mask = "*!*@localhost";
	mask = "*!*@127.0.0.1";
};
